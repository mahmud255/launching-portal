name: Auto update (every 3 days)

on:
  schedule:
    - cron: "0 3 */3 * *"   # ~09:00 Asia/Dhaka
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure git author (uses your noreply if provided)
        shell: bash
        run: |
          AUTHOR_NAME="${{ github.actor }}"
          # If you add a repo secret named NOREPLY_EMAIL, we'll use it. Otherwise fallback.
          AUTHOR_EMAIL="${{ secrets.NOREPLY_EMAIL }}"
          if [ -z "$AUTHOR_EMAIL" ]; then
            AUTHOR_EMAIL="${{ github.actor }}@users.noreply.github.com"
          fi
          git config user.name  "$AUTHOR_NAME"
          git config user.email "$AUTHOR_EMAIL"
          echo "Author: $AUTHOR_NAME <$AUTHOR_EMAIL>"

      - name: Rotate accent color in config.json (Node script)
        shell: bash
        run: |
          set -e
          node - <<'NODE'
          const fs = require('fs');
          const path = 'config.json';
          const DEFAULT = {
            accent: '#2DD4BF',
            palette: ['#2DD4BF','#60A5FA','#A78BFA','#F472B6','#F87171','#F59E0B']
          };
          let cfg = DEFAULT;
          if (fs.existsSync(path)) {
            try {
              const cur = JSON.parse(fs.readFileSync(path, 'utf8'));
              cfg = { ...DEFAULT, ...cur };
              if (!Array.isArray(cfg.palette) || cfg.palette.length === 0) cfg.palette = DEFAULT.palette;
            } catch { cfg = DEFAULT; }
          }
          const arr = cfg.palette;
          const idx = Math.max(0, arr.findIndex(c => c === cfg.accent));
          const next = arr[(idx + 1) % arr.length];
          cfg.accent = next;
          fs.writeFileSync(path, JSON.stringify(cfg, null, 2) + '\n');
          console.log(`accent rotated -> ${next}`);
          NODE

      - name: Publish one queued note (optional)
        shell: bash
        run: |
          set -e
          if [ -s queue.txt ]; then
            NEXT_LINE="$(head -n 1 queue.txt)"
            tail -n +2 queue.txt > queue.tmp && mv queue.tmp queue.txt
            echo "" >> NOTES.md
            echo "## $(date -u +'%Y-%m-%d')" >> NOTES.md
            echo "$NEXT_LINE" >> NOTES.md
            echo "note published: $NEXT_LINE"
          else
            echo "no queue.txt or empty; skipping note publish"
          fi

      - name: Commit & push
        shell: bash
        run: |
          git add config.json NOTES.md queue.txt 2>/dev/null || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore: scheduled update"
          git push
